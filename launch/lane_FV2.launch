<?xml version="1.0" encoding="utf-8"?>

<launch>
  <!-- files folder path -->
  <arg name="yolo_names_path"		default="$(find yolo_object_detection)/yolo_network_config"/>
  <arg name="yolo_cfg_path"		default="$(find yolo_object_detection)/yolo_network_config/cfg"/>
  <arg name="yolo_weights_path"		default="$(find yolo_object_detection)/yolo_network_config/weights"/>

  <!-- ROS parameter files -->
  <arg name="ros_param_file"             default="$(find scale_truck_control)/config/config.yaml"/>
  <arg name="lrc_param_file"             default="$(find scale_truck_control)/config/lrc_FV2.yaml"/>
  <arg name="vehicle_param_file"             default="$(find scale_truck_control)/config/FV2.yaml"/>
  <arg name="lidar_param_file"             default="$(find scale_truck_control)/config/laser_filter.yaml"/>
  <arg name="yolo_param_file"		default="$(find scale_truck_control)/config/yolov3-tiny-custom.yaml"/>

  <!-- Load parameters -->
  <rosparam command="load" ns="scale_truck_control" file="$(arg ros_param_file)"/>
  <rosparam command="load" ns="scale_truck_control" file="$(arg vehicle_param_file)"/>
  <rosparam command="load" ns="LRC" file="$(arg lrc_param_file)"/>

  <!-- Start usb_cam -->
  <node pkg="usb_cam" type="usb_cam_node" name="usb_cam" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap" />
  </node>

  <!-- Start lane_cam -->
  <node name="lane_cam" pkg="usb_cam" type="usb_cam_node" >
    <param name="video_device" value="/dev/video2" />
    <param name="image_width" value="640" />
    <param name="image_height" value="360" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
    <remap from="/usb_cam/" to="/lane_cam/"/>
  </node>

  <!-- Start rplidar_ros -->
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
    <param name="serial_baudrate"     type="int"    value="256000"/><!--A3 -->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
    <param name="scan_mode"           type="string" value="Stability"/>
  </node>

  <!-- Start laser_filters -->
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter" >
    <rosparam command="load" file="$(arg lidar_param_file)"/>
  </node>

  <!-- obstacle detector node -->
  <node name="obstacle_extractor" pkg="obstacle_detector" type="obstacle_extractor_node">
    <remap from="scan" to="scan_filtered"/>
    <param name="active"			value="true"/>
    <param name="use_scan"			value="true"/>
    <param name="use_pcl"			value="false"/>
    <param name="use_split_and_merge"		value="true"/>
    <param name="circles_from_visibles"		value="true"/>
    <param name="discard_converted_segments"	value="true"/>
    <param name="transform_coordinates"		value="true"/>
    <param name="min_group_points"		value="5"/>
    <param name="max_group_distance"		value="0.2"/>
    <param name="distance_proportion"		value="0.00628"/>
    <param name="max_split_distance"		value="0.2"/>
    <param name="max_merge_separation"		value="0.2"/>
    <param name="max_merge_spread"		value="0.2"/>
    <param name="max_circle_radius"		value="0.6"/>
    <param name="radius_enlargement"		value="0.3"/>
    <param name="frame_id"			value="laser"/>
  </node>
  
  <node name="obstacle_tracker" pkg="obstacle_detector" type="obstacle_tracker_node">
    <remap from="scan" to="scan_filtered"/>
    <param name="active"			value="true"/>
    <param name="copy_segments"			value="true"/>
    <param name="loop_rate"			value="30.0"/>
    <param name="tracking_duration"		value="1.0"/>
    <param name="min_correspondence_cost"	value="0.3"/>
    <param name="std_correspondence_dev"	value="0.15"/>
    <param name="process_variance"		value="0.01"/>
    <param name="process_rate_variance"		value="0.1"/>
    <param name="measurement_variance"		value="1.0"/>
    <param name="frame_id"			value="laser"/>
  </node>

  <!-- Start darknet and ros wrapper -->
  <node pkg="yolo_object_detection" type="yolo_object_detection" name="yolo_object_detection" output="screen" >
    <param name="names_path"		value="$(arg yolo_names_path)" />
    <param name="cfg_path"			value="$(arg yolo_cfg_path)" />
    <param name="weights_path"		value="$(arg yolo_weights_path)" />
  </node>

  <!-- Start Scale Truck Control -->
  <node pkg="scale_truck_control" type="scale_truck_control" name="scale_truck_control" output="screen" />
  <node pkg="scale_truck_control" type="LRC" name="LRC" output="screen" />
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node" >
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="57600"/>
  </node>

</launch>
